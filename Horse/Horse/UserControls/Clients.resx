<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnSearch.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /gc5IbwJCcnoXgAAAABJRU5ErkJggg==
</value>
  </data>
</root>