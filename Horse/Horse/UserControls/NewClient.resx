<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnGuardar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>